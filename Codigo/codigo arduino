//*Codigos base para proyecto semestral 2024-2
#include "HX711.h"
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <Stepper.h>
#include <EEPROM.h>

// Inicializa la pantalla LCD I2C 
LiquidCrystal_I2C pantallaLCD(0x27, 16, 2); // SDA: 20, SCL: 21 en Mega

// Pines de los botones
byte DT = 3;
byte CLK = 2;

const byte buttonUp = 10;
const byte buttonDown = 9;
const byte buttonSelect = 8;

// Valores para la balanza
int peso_conocido[4] = {23, 26, 35, 63};
long escala;

// Variables del menú
const char* menuItems[] = {"1.Cantidad", "2.Servir", "3.Purgar", "4.Tarear"};
const int menuSize = sizeof(menuItems) / sizeof(menuItems[0]);
int selectedItem = 0;

bool inGramosMenu = false;
int selectedGramos = 0; // Valor de gramos seleccionado por el usuario

// Crear el objeto balanza
HX711 balanza;

// Motor
const int pasosPorRevolucion = 2048;
Stepper motorPasoAPaso(pasosPorRevolucion, 7, 5, 6, 4);

// Función de anti-rebote
void anti_debounce(byte boton) {
  delay(100);
  while (digitalRead(boton));
  delay(100);
}

void calibration() {
  int i = 0, cal = 1;
  long adc_lecture;

  pantallaLCD.setCursor(2, 0);
  pantallaLCD.print("Calibracion de");
  pantallaLCD.setCursor(4, 1);
  pantallaLCD.print("Balanza");
  delay(1500);
  balanza.read();
  balanza.set_scale(); // La escala por defecto es 1
  balanza.tare(20);    // El peso actual es considerado Tara.

  pantallaLCD.clear();

  while (cal == 1) {
    pantallaLCD.setCursor(1, 0);
    pantallaLCD.print("Peso Conocido:");
    pantallaLCD.setCursor(1, 1);
    pantallaLCD.print(peso_conocido[i]);
    pantallaLCD.print(" g        ");

    if (digitalRead(buttonUp)) {
      anti_debounce(buttonUp);
      i = (i > 2) ? 0 : i + 1;
    }
    if (digitalRead(buttonDown)) {
      pantallaLCD.clear();
      pantallaLCD.setCursor(1, 0);
      pantallaLCD.print("Ponga el Peso");
      pantallaLCD.setCursor(1, 1);
      pantallaLCD.print("y espere...");
      delay(2000);

      adc_lecture = balanza.get_value(100);
      escala = adc_lecture / peso_conocido[i];
      EEPROM.put(0, escala);
      delay(100);
      cal = 0;
      pantallaLCD.clear();
    }
  }
}

void setup() {
  balanza.begin(DT, CLK);
  pantallaLCD.init();
  pantallaLCD.backlight();

  pinMode(buttonUp, INPUT);
  pinMode(buttonDown, INPUT);
  pinMode(buttonSelect, INPUT);

  EEPROM.get(0, escala);

  if (digitalRead(buttonUp) && digitalRead(buttonDown))
    calibration();

  pantallaLCD.setCursor(1, 0);
  pantallaLCD.print("Retire el Peso");
  pantallaLCD.setCursor(1, 1);
  pantallaLCD.print("y Espere");
  delay(2000);
  balanza.set_scale(escala);
  balanza.tare(20);
  pantallaLCD.clear();
  pantallaLCD.setCursor(1, 0);
  pantallaLCD.print("Listo....");
  delay(1000);
  pantallaLCD.clear();

  motorPasoAPaso.setSpeed(10); // RPM del motor
  displayMenu();
}

void loop() {
  if (digitalRead(buttonUp) == HIGH) {
    if (inGramosMenu) {
      selectedGramos = (selectedGramos + 10) % 110;
    } else {
      selectedItem = (selectedItem - 1 + menuSize) % menuSize;
    }
    displayMenu();
    delay(200);
  }

  if (digitalRead(buttonDown) == HIGH) {
    if (inGramosMenu) {
      selectedGramos = (selectedGramos - 10 + 110) % 110;
    } else {
      selectedItem = (selectedItem + 1) % menuSize;
    }
    displayMenu();
    delay(200);
  }

  if (digitalRead(buttonSelect) == HIGH) {
    if (inGramosMenu) {
      EEPROM.put(4, selectedGramos); // Guarda los gramos en EEPROM
      inGramosMenu = false;
      pantallaLCD.clear();
      pantallaLCD.print("Cantidad Guardada");
      delay(1000);
      displayMenu();
    } else if (selectedItem == 0) { // Cantidad
      inGramosMenu = true;
      displayMenu();
    } else if (selectedItem == 1) { // Servir
      servirComida();
    } else if (selectedItem == 2) { // Purgar
      pantallaLCD.clear();
      pantallaLCD.print("Purgando...");
      delay(2000);
      motorPasoAPaso.step(pasosPorRevolucion);
      displayMenu();
    } else if (selectedItem == 3) { // Tarear
      tarearPeso();
    }
    delay(200);
  }
}

void displayMenu() {
  pantallaLCD.clear();
  if (inGramosMenu) {
    pantallaLCD.print("Gramos:");
    pantallaLCD.setCursor(0, 1);
    pantallaLCD.print(selectedGramos);
  } else {
    pantallaLCD.print("Menu:");
    pantallaLCD.setCursor(0, 1);
    pantallaLCD.print(menuItems[selectedItem]);
  }
}

void servirComida() {
  int gramosGuardados;
  EEPROM.get(4, gramosGuardados); // Lee los gramos de la EEPROM

  pantallaLCD.clear();
  pantallaLCD.print("Sirviendo...");
  delay(1000);

  while (balanza.get_units(10) < gramosGuardados) {
    motorPasoAPaso.step(10); // Mueve el motor
  }

  pantallaLCD.clear();
  pantallaLCD.print("Terminado");
  delay(2000);
  displayMenu();
}

void tarearPeso() {
  pantallaLCD.clear();
  pantallaLCD.print("Tareando...");
  balanza.tare(20);  // Tarea el sensor
  delay(1000);
  pantallaLCD.clear();
  pantallaLCD.print("Peso Tareado");
  delay(1000);
  displayMenu();
}
